{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended"
  ],
  "rules": {
    // Async/await pattern rules for auto-sync functionality
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/promise-function-async": "error",
    
    // Error handling rules for robust sync operations
    "@typescript-eslint/no-unused-vars": ["error", { 
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_"
    }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    
    // General code quality rules for auto-sync components
    "no-console": "warn",
    "prefer-const": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    
    // Timer and scheduler specific rules
    "no-implied-eval": "error",
    "no-new-func": "error",
    "@typescript-eslint/no-implied-eval": "error",
    
    // API integration rules
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/strict-boolean-expressions": ["error", {
      "allowString": false,
      "allowNumber": false,
      "allowNullableObject": false
    }],
    
    // Performance and memory rules for large sync operations
    "no-constant-binary-expression": "error",
    "no-constructor-return": "error",
    "no-duplicate-imports": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable-loop": "error",
    
    // JQL and API specific rules
    "no-useless-concat": "error",
    "prefer-template": "error",
    "radix": "error"
  },
  "env": {
    "node": true,
    "es2020": true,
    "jest": true
  },
  "globals": {
    "NodeJS": "readonly",
    "navigator": "readonly"
  },
  "ignorePatterns": [
    "dist/",
    "node_modules/",
    "*.js"
  ],
  "overrides": [
    {
      "files": ["tests/**/__mocks__/**/*.ts"],
      "env": {
        "jest": true
      },
      "rules": {
        // Very relaxed rules for mock files
        "@typescript-eslint/no-unused-vars": "off",
        "no-unused-vars": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-empty-function": "off",
        "no-console": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        "prefer-template": "off",
        
        // Async/promise rules for mock implementations
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/no-misused-promises": "off"
      }
    },
    {
      "files": ["tests/**/*.ts"],
      "excludedFiles": ["tests/**/__mocks__/**/*.ts"],
      "env": {
        "jest": true
      },
      "rules": {
        // Relaxed rules for test files
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-empty-function": "off",
        "no-console": "off",
        
        // Jest-specific patterns
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { 
          "argsIgnorePattern": "^_|^(index|current|total|phase|details|ticketKey|error|name)$",
          "varsIgnorePattern": "^_|^(mock|Mock|jest|expect|describe|it|test|beforeEach|afterEach|beforeAll|afterAll|waitFor|startTime|now|phases|syncDelay|firstTime).*$"
        }],
        "no-unused-vars": "off",
        
        // Timer mocking patterns
        "@typescript-eslint/no-implied-eval": "off",
        "@typescript-eslint/unbound-method": "off",
        
        // Test-specific async patterns
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/no-misused-promises": "off",
        
        // Allow test doubles and mocks
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-empty-interface": "off",
        
        // Test setup patterns
        "prefer-const": "off",
        "@typescript-eslint/prefer-readonly": "off",
        
        // Relax strict boolean expressions for test utilities
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        
        // Allow template concatenation in tests
        "prefer-template": "off",
        
        // Relax test-specific rules
        "radix": "off",
        "no-prototype-builtins": "off"
      }
    },
    {
      "files": ["src/**/*.ts"],
      "rules": {
        // Stricter rules for source files
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off"
      }
    }
  ]
}